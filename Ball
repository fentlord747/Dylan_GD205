Ball ball; // defines the balla as a object 
paddle paddleLeft;
paddle paddleRight;

void setup(){
  size(800,600);
  ball =new Ball(width/2, height/2, 50); // creates the ball and puts it in the center
  ball.speedX = 5; // gives it speed on za xaxis
  ball.speedY = random(-3,3); // spped for the y axis
  
  paddleLeft = new paddle(15, height/2, 30,200);
  paddleRight = new paddle(width-15, height/2, 30,200);
  
 

  
}

void draw(){
  background(0); 
  ball.display();
  ball.move(); //works on a neew location for the ball
  ball.display();
  
  paddleLeft.move();
  paddleLeft.display();
  paddleRight.move();
  paddleRight.display();


  
  if ( ball.left() < paddleLeft.right() && ball.y > paddleLeft.top() && ball.y < paddleLeft.bottom()){
    ball.speedX = -ball.speedX;
    paddleLeft.display();
      paddleRight.display();
  }

  if ( ball.right() > paddleRight.left() && ball.y > paddleRight.top() && ball.y < paddleRight.bottom()) {
    ball.speedX = -ball.speedX;
  }
  
  if (ball.right() > width) {
  ball.speedX = -ball.speedX;
  paddleLeft.move();
  
  paddleRight.move();

  if (paddleLeft.bottom() > height) {
    paddleLeft.y = height-paddleLeft.h/2; }

  if (paddleLeft.top() < 0) {
    paddleLeft.y = paddleLeft.h/2;
  }
    
  if (paddleRight.bottom() > height) {
    paddleRight.y = height-paddleRight.h/2;
  }

  if (paddleRight.top() < 0) {
    paddleRight.y = paddleRight.h/2;}


}

if (ball.left() < 0) {
    ball.speedX = -ball.speedX;
  }

  if (ball.bottom() > height) {
    ball.speedY = -ball.speedY;
  }

  if (ball.top() < 0) {
    ball.speedY = -ball.speedY;
  }
  
}

class Ball{ 
  float x;  // float keeps the name of task
  float y;
  float speedX;
  float speedY;
  float diameter;
  color c;
  
  
  Ball(float tempX, float tempY, float tempDiameter) {
    
    x = tempX;
    y = tempY;
    diameter = tempDiameter;
    speedX = 0;
    speedY = 0;
    c = (255);
  }
  

void move() { //adds speed 
  y = y + speedY;
  x = x + speedX;
}

void display() {
  fill(c);
  ellipse(x,y,diameter,diameter); //susposed to help with the collsioin 
}

float left(){
    return x-diameter/2;
  }
  float right(){
    return x+diameter/2;
  }
  float top(){
    return y-diameter/2;
  }
  float bottom(){
    return y+diameter/2;
  }
}

class paddle{
  
  float x;
  float y;
  float w;
  float h;
  float speedY;
  float speedX;
  color c;
  
  paddle (float tempX, float tempY, float tempW, float tempH){
    x = tempX;
    y = tempY;
    w = tempW;
    h = tempH;
    speedY = 0;
    speedX = 0;
    c=(255);
  }
  void move(){
    y += speedY;
    x += speedX;
  }
    
  void display(){
    fill(c);
    rect(x-w/2,y-h/2,w,h);
  }
  // functions that help
  float left(){
    return x-w/2;
}
  float right(){
    return x+w/2;
}
  float top(){
    return y-h/2;
  }
  float bottom(){
    return y+h/2;
  }
}

void keyPressed(){
  if(keyCode == UP){
    paddleRight.speedY=-3;
  }
  if(keyCode == DOWN){
    paddleRight.speedY=3;
  }
  if(key == 'a'){
    paddleLeft.speedY=-3;
  }
  if(key == 'z'){
    paddleLeft.speedY=3;
  }
}

void keyReleased(){
  if(keyCode == UP){
    paddleRight.speedY=0;
  }
  if(keyCode == DOWN){
    paddleRight.speedY=0;
  }
  if(key == 'a'){
    paddleLeft.speedY=0;
  }
  if(key == 'z'){
    paddleLeft.speedY=0;
  }
}

  //used this for the whole thing read what the commands do etc
  
  //https://www.instructables.com/Pong-With-Processing/wsza
  
  
  
  
